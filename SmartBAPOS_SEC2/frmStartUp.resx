<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnExit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JQAAgIMAAPn/AACA6QAAdTAAAOpgAAA6mAAAF2+SX8VGAAAACXBIWXMAAAsTAAALEwEAmpwYAAALkUlE
        QVRYR7VXCXBT1xV9YNZCwNLX/7IWW16xLWu3LS/yvgBetNksNiR0DDQJKWkLobQZmCwTskzWTtpACCQp
        hJKUAEkAmz0mwJTdQIAwEBLL8m68SJYsS5b0b++XnQlNQ9NMp2fmzJel9989d33P5OcAFj1I4FePTIXq
        eS9DYckXUFB0Cp//GMkrPHsxL38x4JqtJtPo4v8HYOkyAqtWM1C39Dpk5QBkGwDyC8GXaWBPGgybKtas
        CdtuNo+t/h8A82sJLFg07m5NjaCxduGEgzULR7+vWzoqYNny65CNAgzIgiLwZef4TufmvGleuyZsh8US
        WmvLyiL2/PypZ3JzhS8srBm33Vod+v4nAb9+HI2smQAPL6/xVFefPVFpXEA2bBj36rz5BB5cgr+vpKGu
        7lrIeA6yqBhGDDnBs3m5f8pdty7sbygAOK5bP34kO+vJDqWi6ZI+fd471qoJDUXFY1buA1jzewIrHpsC
        T6xeB7W1A2xJCdyYPdu2xWLR7cDcshYrgcWLBVCz8MuQcY7FxeDPyWGvZmW+nv/bVeP3lJcTKK8gPRUV
        eraoyO5P1QW7kxP7Lum0f9xRXjHlYH7BmLUfAB5fQdDribB27VOwaNEQFBUC5OXBEPJwefnOZ2oXT7tZ
        VkagtFQAc+dcAQPmPzcXAEX68/LYG/r0V2b9cvn4y0YjuVZdNc09Z84edMAP+fmuoE7j6U2IG7qo0ax7
        y1I1ee8PIwG1iwlXwbD6iTo07oQc3DwrC5kJkJYKt/T6/m3lZZUXDPkECgso5GXIzv5eQEEB+2VW5kvk
        zxvHQUwM+Tovbz6GvxcKCnycANzHEVTIPT1xMc4zOg3mEcjW0tljxjk+9iiBRx9JhkW1d0CfDqBWAmjU
        wKqUbMesBOehZLlze1l5w9uLambgpjwwZDdBJor7LgUo4JpW+wK33xs1NTO2lcw+fCNF4fRrNQ6MlBsy
        M5ygVTsC8bFDrQmxzUeyMrQ3U3UkpbgEjc+tJDDbOBkqKt6G9DSApFnIRIAUOWtPiHd8ptI4/j63/PpH
        Fqtx/fJlYSCX81DcJdBpISQ2Lxd8ebnsGaXiObQ/7ukF88Keslrnvj+37MrXKrUjqFYN4L4udMqBe/cO
        yyS+q8qUjzZWGqftKipCAYXFBIpKUyEtrSdkmKMiBXrkya4GNL63rPLaPmt1hhveJ8NaLQGViofiLiAD
        oFL68D3wZWQEzmnUzxAykWzOziQgmEPenDdP90V5RZNDoXThOx5QKQYhKaEboiN7u2Nl/Scz9QXXVUoU
        8Mob4yEz60XOKGg1wHnmS9WNnEpM6vt0dll3vaWqbG+xkRysqiKQmsoxHNecx039oNG4sUb8vrRU7wW1
        aj053kX2pKWStdzaCiM5XlVV1FE6pz2YmOjHCHggEQXEytqGpSJPk1a9dc3yusnofYkU0tO/DBUchpPL
        a3NKSv/+nHx3vdn62rHq6omHsP04oLccZ0J21nnQ67kiHcZC9HmzMj2XtJonuXran5cbWnu+upq8s2B+
        2F2r9eVgRmYQHfRCSnJnMFZm80siemxJCd8cLMhPImDIzcdC6YdCbDuk32DwX1Qq+hvKKzvRsO6QeXSy
        ccDOIJCROQNFng11QY5hBDvC7zVkuy9q1Ws5AfX39DmLkXBYrUlsWXkLJCYGg0pFtys2utklEdk7oyMH
        TuvTcbDkFyzDysaNRgW4MvSekzk57sMWS+Nhq2XGobHRyiEkQJ8xA59nQl2QlelDMd5hvb7vQqpuNSfg
        s3vOgoDFTAJW82ScjPWYMmBT5I7BuBhbnyTC1iOJcJ/XqJ/GFBS/gGS5duLGapdOO/B5aanniNX6fMij
        sfBzgIwMAun6BzD3p0CJOVWp+kGr7XEpFG0XtOrfcev3otffIVCIc2PBQgJVVRsgB9ObnORxx8W09IqF
        tv4I2nVBo/qUoOGtIeMcCwvZZo269/OyMs9Rq2XZ5+jNJ1XGse1QgD4kYDrExzeCLLorEBNj88bFNXfH
        xtjPqZW/4QTsMn8vmEPoXKiuqsOBFYCkJK87NtreJ2KanQw1eEmjvERw3L7HjVzIRRoM7Lco4ERFheeY
        xbK0EQXsu+d8Bx12gVY7nZVIj/kiItoGRaLmu2Jx87cSsf2USrnSjWt2mn4owMxFYAnMmePH1vW6o2X2
        /gim2U3zXVc1qqsENNqXQKcDbC9sQR3bPipg+IjZ8mxHeQFpuLcIuTmg0UwLCIVHBvlUZzef32JHfiWg
        206myB/rxDV/tXyfAqg2EjCbCFit62DuXODmgStS2uIU0jYPQ7lvpKceIZAw62EM6QhWKUefQ6W8e6qs
        bAir/2iD2TwdObYdIT6DAYs2f2KXWPzGDaHwTJNQePoszZxupOnTh+LjjI3Tp5G/1I7eHTiAFcNfZZ2I
        adjNnRmsQuF0SkQ2l1DQ4omgPde06tcIGxNbHJRKByAmehgPEpcvMbH7XGFB/0GzueOA2ayqv0fAqc1b
        Qs8dycnTN8YnMJvi45lNsbHCt2QyZnNc3KR3ZLLQ798hlH+LJRJM5lvc/SGYEN8zMBr+1oEI2t2kVjxE
        2Lh4Gebzq4BEMgJRUX0oouNWqq6zobLSu99kev5Dkzlsr+nnX7MC3N1BHc8JWIPnjB8HWMAbFdnezwia
        h/nhPa0RdPtxrUpHYOGSsCGx5HUXTQeCIlEniCWtLnlyW2NpqRN7unOv2Zxfj4W4855a+Cnsn4+th7l3
        YARZs/kO195scrKrn6FbHBTfNsSbOXxZJj2wpbTkATIojCCuKFlWLyXoGxLQvQGasfmlUnuLTtt1ALvh
        Y5Pp4odGkwLTQd7F285PAbANO1Gwy2SJ8pnNR6GikuuuwJBE0tHL5zV7eOGdXbyZnsaEuAXtE/AFl0JJ
        vOkZU3tE4u13+ZTfgxXtEzA2b3R0+63MjN59RqN3N4r4yGjMe73SGPYe3njuh1DOrVXjwGxWg8l0DIxG
        FguRxbrq7ePxbIM8nt0TPtN7OYI5vUOjoj9RphDieHgFaaUEpD0mTtNG0/Y+SuD2CJiWYYyENza2uz0j
        w9FUWeG7ZDK13zSZXu4xmZIGjcYpDpxwA9yph20HVrywWiyT0HAMFtx6MJqaUQDg3ZEdSU0d6OPzbU4e
        r8XLCx+08cMdDTGyChsK3pybM6q8Wa4kduO88d9EyVa20vTQAE0PeJiQiBavLPquV6vxuEtLvcNGoz9g
        NLYGTaZDQZP5NdZkXsmaTCvQ8ItocB/yG/TaHzK+YH7Aq9H09fMpNM63efm8/h5e+MhxsWjDc9k5k97H
        yP8LriTMIheT5FNvSCSv2hna52AYh08obPEyjG1ILO70y+VuNi09AEVFAGVlgJUNUFkZDJH7XF4OeGEF
        triYDeTmeFwxMZ0D6Lmbolp8FNWP+Q+cEgo/2JQs5+/Ee+OP4kJkJDmRmDTjikTyio1hhp0MM+SLELZ5
        hShCKLS7JZJO76xEp1+X6gvqMwIsnvNsZlYwmJkdCKSl+3zJyU5XVFSng6ZbnBTV7KEFbSMCyt1F8f0n
        IkQfvJ2YIjwQ/gAxrX9vzOKP4HRkFPlULp96Tip99DbDtHVje7oYpm9IyLS6ado2SAtsDhQzIBK1OcSS
        didH/OwUMnaHgLI5KMo2KKDswwKqB733f01RAw1C4TOvJibzDo0nJGrn7TFL/wHbUhRko0YbdjRKlnZO
        JP74Nk072wWUv19AuQYEVFcfRbXdpSg7sqVXQLX0IfsFglangOpwUXwHhn6kmaKGTjDMsR0SScnqxKRJ
        L0bfJ+z3xao/hK7sW5JSptdHyfKPS6SbL9P0nZsU5bzD53ubkTZky9iT+/s2xXc1oah6oXDXTrG48tm4
        eB63h77yvx9i/w78J6Jh8hSyOjtv0rb4hPi9kVEV+6XSVbujZO/ukUbW75ZKD+6SSD/YIxI9uVMktr4Z
        GSV/SJ7yC86wYEnd6B73BSH/BJ5MAHozjgBvAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnSave.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAEdklEQVRYR9WWS0xcdRjFkbhxZWRrQhca
        dxoXJi7dq2u1kT7VxLqoQHlb5WpRGmup1XaAANIZGIa2PEZahFKgPIYMY8uzQmGAOlNmhgAtA1Rpi5jj
        +Yb/4PAY5g4kJp7kF1h959zvO/dCzP9Spa0eIY7sIfE6eZaoCbtQQtaFmFfeSootaJj4kQM9xK2DSZJI
        1JRdSAK8l1b8/KlL/UMXbnhh7hR8etCImrILSYD3M0vfySlzLFfYfHC459Dnmyf+SGhETdmhxJw8zQAV
        XxntsHRNcfA8hu8v6EEjatIOpQK8mpBZ6jth6kZZuw91vdOo79eFRtSkHUiZP0XyCCSAsc2L8g7CHuhA
        I2raDqQCvEY8wQAVtqkoOzCvpkUpZf4MMYt5MIDeDgzNLqB/2q+NPlhUE6OQMhc+IktiLkTTgYsOH/Jb
        XFrRjXtqqk4pY+EN4hLjIHo6IN8IU7sXJ60TOF7p1D6vdKrJOkSTIK+TQTENRV8H5mG/9wBNY9Nock5r
        RE2PIBoIseRNMiyGG9HTgd9mGcBzH7bJWUEjyiGCaMCvXeDm90NN18jU1wGjzYNzza4gGlEOEXRYKxcM
        BIc18zoOZZevbSBcB+T2JS2T+PLyGHj3IPo78G1lu2AgWE8HckytgRAnjOE6IL8voMMlt58JJZsohwg6
        W2sXDAQbkRCyGQmwuQOLgXfe4XLiSu8vqLaXoGXUgva7bej4vSd3DohpHk5TLtso6UytYCDYyNHvarD/
        uHGLDsygvs+F2q5y/HQ1EflV+1FkPYCGgSQ0D6eTLC/NNRIXMQRXLBhk1Zsp29QB+XtvahtDYd1pGC7v
        o7nAAD8fQuPAMZqnKVL/5k9jxBC8d9QdsNrNAdNQQgO03slC59jX8ruE+MzieDv8OXhr3R3on1pAz+Q4
        Srn21adfH6AhECAdzumrePh4CgOTRglxl7wUNgBvrbsDV/pmUdVVj4KqA+vMJcxqgGQMeS9ieWUJIo+/
        Gy13MriF1L1hA3DFUXTAh+L6QpomBIwLqg+ipikPlvpsBjiIX8cL8fivhYD53J/jsI3lShdkCx+HDcB7
        R9EBP5tfwideDVB97RRu3nTA7ujEtc5S+B96AuaLj7zonsjD9eEUMd8+AG+tuwO9/Og0DjTSfPUElvov
        YLM3o+dWLwYHb+PJk2U8Wvbjlisf14fWzFfIu2EDJJ2xCuyAlXf/l+Tvrfj09PoOGPnZ/aGhB+eqjjLA
        PhiIsS4FrTYrbjPAH0t+DHrK+OSBtQcZJy+EDcD/egUDQThyGKCwaRKZ5lGkGEfwjaUosIFAARmiuPYT
        NHeZ0e+qCDUW5DXMIOFfQ5ZMMEjZwiEbyK25ixTTCFJNo0gv6+d5Tq2dQt6CkroPeJ61tQfNS8hzRLlt
        IRoIOcRL3FuRVdzlzjQ73ammEcWoO6Osz33Sct51vurDGYZYCfkQyc3l3Zcn395cRAMhjuwh8VuReL4j
        nqZkZI1jpon4FJMz/uyl5JfZh70McIQBjtBQCvciiY1o/t8qJuYfbxhuckPLro0AAAAASUVORK5CYII=
</value>
  </data>
</root>